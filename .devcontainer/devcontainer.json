{
  "name": "LaTeX",
	// Update the 'image' property with your Docker image name.
	"image": "froland/latex:latest",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"latex-workshop.intellisense.package.enabled": true,
		"latex-workshop.latex.autoBuild.cleanAndRetry.enabled": false,
		"latex-workshop.latex.autoBuild.run": "never",
		"latex-workshop.latex.outDir": "%DIR%/out",
		"latex-workshop.latex.recipe.default": "first",
		"latex-workshop.latex.tools": [
			{
				"name": "latexmk",
				"command": "latexmk",
				"args": [
					"-synctex=1",
					"-silent",
					"-lualatex",
					"-interaction=nonstopmode",
					"-file-line-error",
					"-outdir=%OUTDIR%",
					"--shell-escape",
					"%DOC%"
				],
				"env": {}
			},
			{
				"name": "pdflatex",
				"command": "pdflatex",
				"args": [
					"-synctex=1",
					"-interaction=nonstopmode",
					"-file-line-error",
					"%DOC%"
				],
				"env": {}
			},
			{
				"name": "bibtex",
				"command": "bibtex",
				"args": [
					"%DOCFILE%"
				],
				"env": {}
			}
		],
		"latex-workshop.linting.chktex.enabled": true,
		"latex-workshop.message.update.show": false,
		"latex-workshop.synctex.afterBuild.enabled": true,
		"latex-workshop.view.pdf.viewer": "tab",
		"[latex]": {
			"editor.defaultFormatter": "James-Yu.latex-workshop"
		}
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"EditorConfig.EditorConfig",
		"James-Yu.latex-workshop"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to run commands after the container is created - like installing curl
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. To add a non-root user, see: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
